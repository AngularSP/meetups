{"version":3,"sources":["./src/app/meetup/banner/banner.component.ts","./src/app/meetup/banner/banner.component.html","./src/app/meetup/meetup-routing.module.ts","./src/app/meetup/meetup.component.html","./src/app/meetup/meetup.component.ts","./src/app/meetup/meetup.module.ts","./src/app/meetup/meetup.service.ts"],"names":[],"mappings":"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","file":"src_app_meetup_meetup_module_ts.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { MeetupService } from '../meetup.service';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.css']\n})\nexport class BannerComponent implements OnInit {\n  public data$: Observable<any>;\n  public talkIdx = 0;\n\n  constructor(\n    private meetupService: MeetupService,\n    private router: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    const meetupId = this.router.snapshot.params.id;\n    this.talkIdx = this.router.snapshot.params.talk - 1;\n\n    this.data$ = this.meetupService.getEvents().pipe(\n      map((data) => data.find(item => item.id === +meetupId))\n    );\n  }\n\n  getBackGroundColor(data) {\n    return `linear-gradient(145deg,${data.primaryColor},${data.secondaryColor})`;\n  }\n\n}\n","<div class=\"banner\" *ngIf=\"(data$ | async) as data\">\n  <header>\n    <div class=\"background\" [style.background]=\"getBackGroundColor(data)\"></div>\n    <section class=\"intro\">\n      <div class=\"intro__logo\">\n        <img src=\"assets/logo.svg\" alt=\"AngularSP\" width=\"300\" height=\"300\" />\n      </div>\n      <div class=\"intro__info\">\n        <h1>AngularSP #{{ data.id }}</h1>\n        <h2>{{ data.date }}</h2>\n        <h3>{{ data.title }}</h3>\n      </div>\n    </section>\n  </header>\n\n  <article>\n    <div class=\"content\">\n      <div class=\"content__photo\">\n        <img src=\"assets/photos/{{data.talks[talkIdx].photo}}\" alt=\"spekar\">\n      </div>\n      <div class=\"content__info\">\n        <span class=\"info__talk\">{{ data.talks[talkIdx].subtitle }}</span>\n        <h1 class=\"info__title\">{{ data.talks[talkIdx].title }}</h1>\n        <p class=\"info__speaker\">Por <strong>{{ data.talks[talkIdx].speaker }}</strong></p>\n        <p class=\"info__description\">{{ data.talks[talkIdx].description }}</p>\n      </div>\n    </div>\n  </article>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BannerComponent } from './banner/banner.component';\nimport { MeetupComponent } from './meetup.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MeetupComponent,\n  },\n  {\n    path: ':id/banner/:talk',\n    component: BannerComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MeetupRoutingModule { }\n","<div class=\"container\">\n  <h1>Meetups AngularSP</h1>\n  <ul>\n    <li *ngFor=\"let event of events$ | async\">\n      <strong>Meetup {{event?.id}} - {{event?.title}}</strong>\n      <ul>\n        <li *ngFor=\"let talk of event.talks; let i = index\">\n          <a [routerLink]=\"[event.id, 'banner', i + 1]\">Talk {{i + 1}}</a>\n        </li>\n      </ul>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { MeetupService } from './meetup.service';\n\n@Component({\n  selector: 'app-meetup',\n  templateUrl: './meetup.component.html',\n  styleUrls: ['./meetup.component.css']\n})\nexport class MeetupComponent implements OnInit {\n  public events$: Observable<any>;\n\n  constructor(private meetupService: MeetupService) { }\n\n  ngOnInit(): void {\n    this.events$ = this.meetupService.getEvents();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BannerComponent } from './banner/banner.component';\nimport { MeetupRoutingModule } from './meetup-routing.module';\nimport { MeetupComponent } from './meetup.component';\n\n@NgModule({\n  declarations: [\n    MeetupComponent,\n    BannerComponent\n  ],\n  imports: [\n    CommonModule,\n    MeetupRoutingModule\n  ]\n})\nexport class MeetupModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeetupService {\n  constructor(private http: HttpClient) { }\n\n  getEvents(): Observable<any> {\n    return this.http.get('assets/events.json');\n  }\n}\n"],"sourceRoot":"webpack:///"}